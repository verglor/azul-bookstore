plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.openapi.generator' version '7.16.0'
}

group = 'com.verglor.azul.bookstore'
version = '0.0.1-SNAPSHOT'
description = 'azul-bookstore'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	implementation 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// OpenAPI/Swagger dependencies for generated code
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.13'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.6'

	implementation 'org.liquibase:liquibase-core'

	runtimeOnly 'com.h2database:h2'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

// OpenAPI Generator Configuration
openApiGenerate {
	// Input OpenAPI specification file
	inputSpec = "$projectDir/src/main/resources/api/openapi-spec.yaml".toString()

	// Output directory for generated files
	outputDir = "$buildDir/generated".toString()

	// Generator to use - spring for Spring Boot interfaces and models
	generatorName = "spring"

	// Package configuration
	configOptions = [
		"basePackage"             : "com.verglor.azul.bookstore.openapi",
		"modelPackage"            : "com.verglor.azul.bookstore.openapi.model",
		"apiPackage"              : "com.verglor.azul.bookstore.openapi.api",
		"useSpringBoot3"          : "true",        // Use Spring Boot 3 annotations
		"delegatePattern"         : "true",        // Use delegate pattern
		"performBeanValidation"   : "true",        // Generate Bean Validation annotations
		"generateBuilders"        : "true"         // Generate builders for models
	]
}

// Make the openApiGenerate task run automatically when building
compileJava.dependsOn 'openApiGenerate'

// Configure the generated source directory to be included in compilation
sourceSets {
	main {
		java {
			srcDirs += "${buildDir}/generated/src/main/java"
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
